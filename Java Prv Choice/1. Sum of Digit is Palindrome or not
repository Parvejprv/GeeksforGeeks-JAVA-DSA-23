
class Solution {
    
    // sum of each digit of any number made a new number ( like : 56 --> 5+6 = 11, And we Need to Check 11 Now.)
    public static int sumOfDigits(int num){
        int sum = 0;
        while(num > 0){
            int digit = num % 10;   // last digit of number is
            sum = sum + digit;      // sum of each digit
            num = num / 10;         // remaining number is num/10
        }
        return sum;
    }
    
    int isDigitSumPalindrome(int x) {
        
        int N = sumOfDigits(x);
        
        if(N<0)
            return 0;
        else if(N == 0)
            return 1;
        else if(N % 10 == 0)
            return 0;
        
        // take an extra temp variable and assign the value of the sum(DigitSum)
        int temp = N;

        int reverse = 0;
        while(temp > 0){
            int rem = temp % 10;
            reverse = reverse * 10 + rem;
            temp = temp / 10;
        }
        
        //Check digitSumPalindrome
        // check number (sum of digits) is palindrome or not
        if(reverse == N)
        {
            return 1;
        }
        else{
            return 0;
        }
    
    }
}
